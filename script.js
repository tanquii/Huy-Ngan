var dares = {
    easy: [
        "H√°t m·ªôt b√†i h√°t b·∫±ng gi·ªçng n√≥i h√†i h∆∞·ªõc.",
        "L√†m 10 ƒë·ªông t√°c v·ªó tay.",
        "K·ªÉ m·ªôt c√¢u chuy·ªán h√†i h∆∞·ªõc.",
        "Ch·ª•p m·ªôt b·ª©c ·∫£nh t·ª± s∆∞·ªõng v·ªõi khu√¥n m·∫∑t h√†i h∆∞·ªõc."
    ],
    medium: [
        "B·∫Øt ch∆∞·ªõc gi·ªçng n√≥i c·ªßa m·ªôt ng∆∞·ªùi n·ªïi ti·∫øng.",
        "Nh·∫£y m·ªôt ƒëi·ªáu nh·∫£y b·∫°n ch∆∞a t·ª´ng th·ª≠.",
        "G·ªçi ƒëi·ªán cho m·ªôt ng∆∞·ªùi b·∫°n v√† h√°t ch√∫c m·ª´ng sinh nh·∫≠t.",
        "V·∫Ω m·ªôt b·ª©c tranh b·∫±ng tay kh√¥ng thu·∫≠n c·ªßa b·∫°n."
    ],
    hard: [

        "M√¥ ph·ªèng h√†nh ƒë·ªông ƒÉn k·∫πo m√∫t b·∫±ng ng√≥n tay ƒë·ªëi ph∆∞∆°ng trong 10s. ",
        "Bu·ªôc tay ƒë·ªëi ph∆∞∆°ng v√† h√¥n kh·∫•p c∆° th·ªÉ.",
        "H√¥n ng·ª±c v√† nh≈© hoa c·ªßa ƒë·ªëi ph∆∞∆°ng, s·ª≠ d·ª•ng m√¥i v√† l∆∞·ª°i c·ªßa b·∫°n.",
        "H√¥n v√† li·∫øm quanh v√πng k√≠n c·ªßa ƒë·ªëi ph∆∞∆°ng , nh∆∞ng kh√¥ng tr·ª±c ti·∫øp ch·∫°m v√†o.",
        "H√¥n v√† li·∫øm l∆∞ng ƒë·ªëi ph∆∞∆°ng d∆∞·ªõi m√¥ng l√™n ƒë·∫øn c·ªï, g√°y , sau tai m·ªôt c√°ch th·∫≠t khi√™u g·ª£i.",
        "Massage cho ƒë·ªëi ph∆∞∆°ng m·ªôt c√°ch g·ª£i c·∫£m √¢u y·∫øm.",
        "D√πng v√πng k√≠n √°p s√°t v√†o m·∫∑t ƒë·ªëi ph∆∞∆°ng.",
        "Tr·ªü th√†nh 1 ng∆∞·ªùi h∆∞ h·ªèng c√∫i xu·ªëng cho ƒë·ªëi ph∆∞∆°ng ƒë√°nh v√†o m√¥ng.",
        "Ng·∫≠m vi√™n ƒë√° tr√™n m√¥i , ƒë·∫©y l∆∞·ª°i kh·∫•p l∆∞ng ƒë·ªëi ph∆∞∆°ng.",
        "R√≥t 1 ch√∫t n∆∞·ªõc l√™n b·ª•ng ƒë·ªëi ph∆∞∆°ng v√† li·∫øm n√≥!",
        "D√πng 2 tay l∆∞·ªõt nh·∫π m√°t xa l√≤ng b√†n ch√¢n c·ªßa ƒë·ªëi ph∆∞∆°ng",
        "N·∫øm v·ªã c∆° th·ªÉ ƒë·ªëi ph∆∞∆°ng." ,
        "Th·ª≠ 1 t∆∞ th·∫ø m·ªõi trong l√∫c QH" ,
        "ƒê·ªÉ 1 vi√™n n∆∞·ªõc ƒë√° v√†o ch·ªó ƒë√≥" ,
        "S·ª≠ d·ª•ng tay vu·ªët ve b√™n ngo√†i qu·∫ßn l√≥t c·ªßa ƒë·ªëi ph∆∞∆°ng" ,
        "D√πng ng·ª±c c·∫° v√†o ƒë·ªëi ph∆∞∆°ng" ,
        "Li·∫øm v√πng k√≠n c·ªßa ƒë·ªëi ph∆∞∆°ng " ,
        " C·∫° s√°t 2 v√πng k√≠n l·∫°i v·ªõi nhau khi m·∫∑c qu·∫ßn l√≥t" ,
        " C·∫° s√°t v√†o v√πng k√≠n c·ªßa ƒë·ªëi ph∆∞∆°ng nh∆∞ng ko cho v√†o " ,
        " Cho c·∫≠u nh·ªè ƒë∆∞a v√†o c√¥ b√© ph·∫ßn ƒë·∫ßu trong 20s" ,
        " V√©n t√≥c ƒë·ªëi ph∆∞∆°ng v√† h√¥n v1" ,
        "l√†m t√¨nh v·ªõi ƒë·ªëi ph∆∞∆°ng trong v√≤ng 5 ph√∫t" ,
        "th·ªÉ hi·ªán tr√¨nh ƒë·ªô m√∫t k·∫πo c·ªßa b·∫£n th√¢n b·∫±ng c·∫≠u nh·ªè c·ªßa ƒë·ªëi ph∆∞∆°ng ƒë·ªëi v·ªõi n·ªØ - nam b·ªè qua ",
        " ‚Äú H√∫p h√†u‚Äù " ,
        "D√πng ng√≥n tay l√†m c√¥ b√© ch·∫£y n∆∞·ªõc." ,
        "D√πng tay xoa l√™n ng·ª±c ƒë·ªëi ph∆∞∆°ng " ,
        "H√¥n v√†o h√¥ng ƒë·ªëi ph∆∞∆°ng " ,
        "c·ª°i √°o ng·ª±c ƒë·ªëi ph∆∞∆°ng b·∫±ng 1 tay" ,
        "D√πng m√¥i ch·∫°m v√†o m·ªôt b·ªô ph·∫≠n b·∫•t k√¨ tr√™n ng∆∞·ªùi ƒë·ªëi Ph∆∞∆°ng " ,
        "D√πng m√¥i ch·∫°m v√†o ng·ª±c ƒë·ªëi ph∆∞∆°ng" ,
        "H√¥n v√†o ng·ª±c ƒë·ªëi ph∆∞∆°ng, c√≥ th·ªÉ li·∫øm ng·ª±c" ,
        "d√πng mi·ªáng quan h·ªá trong 2 ph√∫t" ,
        "c√πng ƒë·ªëi ph∆∞∆°ng n√∫t l∆∞·ª°i trong 1 ph√∫t" ,
        "h√¥n v√† th·ªïi v√†o c·ªï ƒë·ªëi ph∆∞∆°ng" ,
        "M·∫∑c √°o ng·ª±c c·ªßa ƒë·ªëi ph∆∞∆°ng ƒë·∫øn h·∫øt 5 l∆∞·ª£t" ,
        "d√πng tay s·ªù ho·∫∑c ƒë∆∞a tay v√†o trong v√πng k√≠n c·ªßa ƒë·ªëi ph∆∞∆°ng trong 1 ph√∫t" ,
        "ng√≥n tay ƒë·ªëi ph∆∞∆°ng trong 10s. ",
        "h√¥n v√†o v√πng m√¥i tr√™n c·ªßa ƒë·ªëi ph∆∞∆°ng" ,
        "h√¥n v√†o v√πng m√¥i d∆∞·ªõi c·ªßa ƒë·ªëi ph∆∞∆°ng" ,
        " kh√¥ng ƒë∆∞·ª£c m·∫∑c b·∫•t k√¨ chi·∫øc √°o n√†o trong 5 ph√∫t" ,
        " r·ªß ƒë·ªëi ph∆∞∆°ng ch∆°i c·∫ßu tu·ªôtüòà" ,
    " l∆∞·ªõt tiktok trong khi ƒëang ng·∫≠m c·∫≠u nh·ªè trong mi·ªáng m√∫t l∆∞u √Ω ‚Äú m√∫t nha‚Äù"
        
        
    ]
};

var truths = {
    easy: [
        "B·∫°n ƒë√£ t·ª´ng n√≥i d·ªëi v·ªÅ ƒëi·ªÅu g√¨ g·∫ßn ƒë√¢y?",
        "ƒêi·ªÅu g√¨ l√†m b·∫°n c·∫£m th·∫•y h·∫°nh ph√∫c nh·∫•t?",
        "B·∫°n th√≠ch m√≥n ƒÉn n√†o nh·∫•t?"
    ],
    medium: [
        "B·∫°n ƒë√£ bao gi·ªù l·ª´a d·ªëi ai ƒë√≥ ƒë·ªÉ ƒë·∫°t ƒë∆∞·ª£c ƒëi·ªÅu g√¨ ch∆∞a?",
        "B·∫°n ƒë√£ t·ª´ng y√™u th·∫ßm ai m√† kh√¥ng d√°m n√≥i?",
        "B·∫°n ƒë√£ t·ª´ng l√†m ƒëi·ªÅu g√¨ ng·ªõ ng·∫©n m√† kh√¥ng ai bi·∫øt?"
    ],
    hard: [
        "K·ªÉ v·ªÅ m·ªôt b√≠ m·∫≠t m√† b·∫°n ch∆∞a bao gi·ªù k·ªÉ cho ai.",
        "B·∫°n c√≥ bao gi·ªù ghen t·ªã v·ªõi m·ªôt ng∆∞·ªùi b·∫°n th√¢n kh√¥ng?",
        "B·∫°n ƒë√£ bao gi·ªù l√†m ƒëi·ªÅu g√¨ tr√°i v·ªõi ƒë·∫°o ƒë·ª©c c·ªßa m√¨nh?"
    ]
};

var selectedLevel = 'easy';
var loggedInUser = null;
var skipCount = 3; // S·ªë l·∫ßn b·ªè qua t·ªëi ƒëa

function saveToLocalStorage(key, value) {
    localStorage.setItem(key, JSON.stringify(value));
}

function getFromLocalStorage(key) {
    return JSON.parse(localStorage.getItem(key));
}

function showNotification(message, success = false) {
    var notification = document.getElementById("notification");
    notification.textContent = message;
    notification.style.backgroundColor = success ? '#4CAF50' : '#f44336';
    notification.style.display = 'block';

    setTimeout(function() {
        notification.style.display = 'none';
    }, 3000);
}

function startGame() {
    var player1 = document.getElementById("player1").value;
    var gender1 = document.getElementById("gender1").value;
    var player2 = document.getElementById("player2").value;
    var gender2 = document.getElementById("gender2").value;
    selectedLevel = document.getElementById("level").value;

    if (player1.trim() === "" || player2.trim() === "") {
        showNotification("Vui l√≤ng nh·∫≠p t√™n c·ªßa c·∫£ hai ng∆∞·ªùi ch∆°i!");
        return;
    }

    document.querySelector(".players").style.display = "none";
    document.querySelector(".challenges").style.display = "block";

    document.querySelector("h1").textContent = `Truth or Dare Challenges - ${player1} (${gender1}) vs ${player2} (${gender2})`;
}

function getRandomTruth() {
    var levelTruths = truths[selectedLevel];
    var randomIndex = Math.floor(Math.random() * levelTruths.length);
    var truth = levelTruths[randomIndex];
    document.getElementById("challenge-text").textContent = truth;
    saveGameHistory("truth", truth);
}

function getRandomDare() {
    var levelDares = dares[selectedLevel];
    var randomIndex = Math.floor(Math.random() * levelDares.length);
    var dare = levelDares[randomIndex];
    document.getElementById("challenge-text").textContent = dare;
    saveGameHistory("dare", dare);
}

function skipChallenge() {
    if (skipCount > 0) {
        skipCount--;
        document.getElementById("skip-count").textContent = `S·ªë l∆∞·ª£t b·ªè qua c√≤n l·∫°i: ${skipCount}`;
    } else {
        var loserSound = document.getElementById("loser-sound");
        loserSound.play();
        showNotification("B·∫°n ƒë√£ d√πng h·∫øt s·ªë l·∫ßn b·ªè qua!");
        return;
    }

    getRandomChallenge();
}

function getRandomChallenge() {
    var randomType = Math.random() < 0.5 ? "truth" : "dare";
    if (randomType === "truth") {
        getRandomTruth();
    } else {
        getRandomDare();
    }
}

function saveGameHistory(type, challenge) {
    if (loggedInUser) {
        var users = getFromLocalStorage('users');
        users[loggedInUser].history.push({ type: type, challenge: challenge });
        saveToLocalStorage('users', users);
    }
}
document.addEventListener("keydown", function(event) {
    if (event.key === "F12") {
        event.preventDefault();
        window.location.href = "error.html"; // Chuy·ªÉn h∆∞·ªõng ng∆∞·ªùi d√πng ƒë·∫øn trang l·ªói
    }
});
document.addEventListener("keydown", function(event) {
    if (event.key === "F12") {
        event.preventDefault();
        alert("Kh√¥ng ƒë∆∞·ª£c ph√©p s·ª≠ d·ª•ng F12 tr√™n trang n√†y.");
    }
});
document.addEventListener('contextmenu', function(e) {
    e.preventDefault();
});
document.addEventListener('keydown', function(e) {
    if (e.ctrlKey && (e.key === 'u' || e.key === 'U' || e.key === 's' || e.key === 'S' || e.key === 'i' || e.key === 'I')) {
        e.preventDefault();
    }
    if (e.key === 'F12') {
        e.preventDefault();
    }
});
document.addEventListener('dragstart', function(e) {
    e.preventDefault();
});
